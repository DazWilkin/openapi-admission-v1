/*
 * k8s.io/api/admission/v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1AdmissionResponse : AdmissionResponse describes an admission response.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1AdmissionResponse {
    /// Allowed indicates whether or not the admission request was permitted.
    #[serde(rename = "allowed")]
    pub allowed: bool,
    /// AuditAnnotations is an unstructured key value map set by remote admission controller (e.g. error=image-blacklisted). MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controller will prefix the keys with admission webhook name (e.g. imagepolicy.example.com/error=image-blacklisted). AuditAnnotations will be provided by the admission webhook to add additional context to the audit log for this request.
    #[serde(rename = "auditAnnotations", skip_serializing_if = "Option::is_none")]
    pub audit_annotations: Option<::std::collections::HashMap<String, String>>,
    /// The patch body. Currently we only support \"JSONPatch\" which implements RFC 6902.
    #[serde(rename = "patch", skip_serializing_if = "Option::is_none")]
    pub patch: Option<String>,
    /// The type of Patch. Currently we only allow \"JSONPatch\".
    #[serde(rename = "patchType", skip_serializing_if = "Option::is_none")]
    pub patch_type: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::V1Status>,
    /// UID is an identifier for the individual request/response. This must be copied over from the corresponding AdmissionRequest.
    #[serde(rename = "uid")]
    pub uid: String,
    /// warnings is a list of warning messages to return to the requesting API client. Warning messages describe a problem the client making the API request should correct or be aware of. Limit warnings to 120 characters if possible. Warnings over 256 characters and large numbers of warnings may be truncated.
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<String>>,
}

impl V1AdmissionResponse {
    /// AdmissionResponse describes an admission response.
    pub fn new(allowed: bool, uid: String) -> V1AdmissionResponse {
        V1AdmissionResponse {
            allowed,
            audit_annotations: None,
            patch: None,
            patch_type: None,
            status: None,
            uid,
            warnings: None,
        }
    }
}


